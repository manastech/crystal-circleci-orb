version: 2.1

description: |
  Common CircleCI tasks for the Crystal programming language.

display:
  home_url: https://crystal-lang.org/
  source_url: https://github.com/manastech/crystal-circleci-orb

executors:
  default:
    description: |
      Use the official Crystal Docker image as executor.
    parameters:
      tag:
        description: |
          crystallang/crystal Docker image tag. Valid values: latest, nightly or M.m.p.
          See https://hub.docker.com/r/crystallang/crystal/
        type: string
        default: latest
    docker:
      - image: crystallang/crystal:<< parameters.tag >>

commands:
  with-shards-cache:
    description: |
      Run a set of steps with shards cache enabled.
    parameters:
      cache-key:
        description: File to use as a shards cache checksum
        default: shard.yml
        type: string
      cache-version:
        description: Cache version; increment this for a fresh cache
        default: v1
        type: string
      include-branch-in-cache-key:
        description: If true, includes current branch name in cache key
        default: true
        type: boolean
      dir:
        description: Path to your shards cache
        default: ~/.cache/shards
        type: string
      steps:
        description: Input any custom steps to run with your shards cache
        type: steps
    steps:
      - restore_cache:
          keys:
            - shards-cache-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>{{ checksum "<<parameters.cache-key>>" }}
            - shards-cache-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>
            - shards-cache-<<parameters.cache-version>>
      - steps: <<parameters.steps>>
      - save_cache:
          key: shards-cache-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>{{ checksum "<<parameters.cache-key>>" }}
          paths:
            - <<parameters.dir>>

  shards-install:
    description: |
      Install Shards dependencies.
    steps:
      - run:
          name: Install dependencies
          command: shards install

  spec:
    description: |
      Run crystal spec with given spec options.
    parameters:
      spec-options:
        description: Additional options to crystal spec like --tag fast
        type: string
        default: ""
      junit:
        description: Store crystal spec output in JUnit format and use it as CircleCI test results
        type: boolean
        default: true
      junit-output:
        description: JUnit output location
        type: string
        default: ~/test-results/crystal-spec
    steps:
      - run:
          name: Run specs
          command: crystal spec << parameters.spec-options >><<#parameters.junit>> --junit_output << parameters.junit-output >><</parameters.junit>>
      - when:
          condition: << parameters.junit >>
          steps:
            - store_test_results:
                path: << parameters.junit-output >>
            - store_artifacts:
                path: << parameters.junit-output >>

  format-check:
    description: |
      Check the format of the source code.
    steps:
      - run:
          name: Check format
          command: crystal tool format --check

  version:
    description: |
      Show Crystal and Shards version.
    steps:
      - run:
          name: Crystal and Shards version
          command: |
            crystal --version
            shards --version

jobs:
  test:
    description: |
      Download dependencies, run specs and check format with specified Crystal version.
    parameters:
      spec-options:
        description: Additional options to crystal spec like --tag fast
        type: string
        default: ""
      junit:
        description: Store crystal spec output in JUnit format and use it as CircleCI test results
        type: boolean
        default: true
      junit-output:
        description: JUnit output location
        type: string
        default: ~/test-results/crystal-spec
      format-check:
        description: Check the format of the source code
        type: boolean
        default: true
      executor:
        description: The executor to use for this job
        type: executor
        default: default
      cache-key:
        description: File to use as a shards cache checksum
        default: shard.yml
        type: string
      cache-version:
        description: Cache version; increment this for a fresh cache
        default: v1
        type: string
      include-branch-in-cache-key:
        description: If true, includes current branch name in cache key
        default: true
        type: boolean
    executor: << parameters.executor >>
    steps:
      - version
      - checkout
      - with-shards-cache:
          cache-key: << parameters.cache-key >>
          cache-version: << parameters.cache-version >>
          include-branch-in-cache-key: << parameters.include-branch-in-cache-key >>
          steps:
            - shards-install
      - spec:
          spec-options: << parameters.spec-options >>
          junit: << parameters.junit >>
          junit-output: << parameters.junit-output >>
      - when:
          condition: << parameters.format-check >>
          steps:
            - format-check

examples:
  latest:
    description: |
      Example for testing using latest Crystal release.
    usage:
      workflows:
        version: 2
        build:
          jobs:
            - crystal/test
      orbs:
        crystal: manastech/crystal@x.y
      version: 2.1

  nightly:
    description: |
      Example for testing using nightly Crystal release.
    usage:
      workflows:
        version: 2
        build:
          jobs:
            - crystal/test:
                name: test-on-nightly
                executor:
                  name: crystal/default
                  tag: nightly
      orbs:
        crystal: manastech/crystal@x.y
      version: 2.1

  binary-dependencies:
    description: |
      Adding binary dependencies via apt.
    usage:
      workflows:
        version: 2
        build:
          jobs:
            - crystal/test:
                pre-steps:
                  - run: apt-get update && apt-get install -y libsqlite3-dev
      orbs:
        crystal: manastech/crystal@x.y
      version: 2.1

  external-services:
    description: |
      Use docker to add external services. Define a custom executor but keep using the crystal/test job.
    usage:
      executors:
        crystal_mysql:
          docker:
            - image: crystallang/crystal:latest
              environment:
                DATABASE_URL: mysql://root@localhost/db
            - image: mysql:5.7
              environment:
                MYSQL_DATABASE: db
                MYSQL_ALLOW_EMPTY_PASSWORD: yes
      workflows:
        version: 2
        build:
          jobs:
            - crystal/test:
                executor: crystal_mysql
                pre-steps:
                  - run:
                      name: Waiting for service to start (check dockerize)
                      command: sleep 5
      orbs:
        crystal: manastech/crystal@x.y
      version: 2.1
